package cm:example;

interface iface {
  markdown-to-html: func(x: string) -> string;
  test1: func(
    p1: bool,
    p2: s8,
    p3: s16,
    p4: s32,
    p5: s64,
    p6: u8,
    p7: u16,
    p8: u32,
    p9: u64,
    p10: char,
  ) -> string;

  test2: func(x: list<option<string>>) -> list<string>;
  test3: func(x: option<option<option<s32>>>) -> s32;

  record ab {
      a: string,
      b: string,
  }
  test-record: func(x: ab) -> ab;
  test-result: func(x: bool) -> result<s32, s32>;
  test-tuple: func(x1: tuple<bool>, x2: tuple<bool, string>, x3: tuple<bool, string, s32>) ->
    tuple<bool, bool, string, bool, string, s32>;

  variant v {
    a(s32),
    b(float32),
  }

  test-variant: func(x: v) -> v;

  enum color {
      hot-pink,
      lime-green,
      navy-blue,
  }

  test-enum: func(x: color) -> s32;

  flags fg {
    a, b, c, d, e,
  }

  test-flags: func(x: fg) -> string;
}